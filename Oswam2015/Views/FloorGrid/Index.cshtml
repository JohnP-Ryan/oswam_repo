@model Oswam2015.Models.CanvasModel
@{
    ViewData["Title"] = "Floor Grid";
    ViewBag.Page = "FloorGrid";
}

<canvas id="canvas"></canvas>

@section Scripts {
    <script type="text/javascript">

        var cellSizePx = 0;
        var sideMargin = 120;
        var placeMode = true;
        var rowLength = (@Model.getXCellDimension());
        var columnLength = (@Model.getYCellDimension());

        //alert("" + window.innerHeight);
        //alert("" + window.innerWidth);

        (function () {
            var canvas = document.getElementById('canvas'),
            context = canvas.getContext('2d');

            canvas.addEventListener('click', handleClick);


            // resize the canvas to fill browser window dynamically
            window.addEventListener('resize', resizeCanvas, false);

            function resizeCanvas() {
                //Determine best cell size to fit viewport
                if((window.innerWidth - sideMargin) / rowLength >= 60){
                    cellSizePx = 60;
                }
                else if((window.innerWidth - sideMargin) / rowLength >= 50){
                    cellSizePx = 50;
                }
                else if((window.innerWidth - sideMargin) / rowLength >= 40){
                    cellSizePx = 40;
                }
                else if((window.innerWidth - sideMargin) / rowLength >= 30){
                    cellSizePx = 30;
                }
                else if((window.innerWidth - sideMargin) / rowLength >= 20 ){
                    cellSizePx = 20;
                }
                else if ((window.innerWidth - sideMargin) / rowLength >= 10){
                    cellSizePx = 10
                }
                else
                {
                    alert("Unsupported Viewport size: more horizontal resolution required for configured warehouse");
                }
                canvas.width = rowLength * cellSizePx;
                canvas.height = columnLength * cellSizePx;

                //alert("" + cellSizePx);

                /**
                 *     Your drawings need to be inside this function otherwise they will be reset when
                 *     you resize the browser window and the canvas goes will be cleared.
                 */
                drawCells();
            }
            resizeCanvas();

            function drawCells() {
                context.beginPath();
                context.fillStyle = "white";
                context.lineWidth = 2;
                context.strokeStyle = 'black';

                for (var row = 0; row < columnLength; row++){
                    for (var column = 0; column < rowLength; column++){
                        var xLocation = column * cellSizePx;
                        var yLocation = row * cellSizePx;
                        context.rect(xLocation, yLocation, cellSizePx, cellSizePx);
                        context.fill();
                        context.stroke();
                    }
                }
                context.closePath();
            }

            function handleClick(e) {
                context.fillStyle = "black";

                context.fillRect(Math.floor(e.offsetX / cellSizePx) * cellSizePx,
                  Math.floor(e.offsetY / cellSizePx) * cellSizePx,
                  cellSizePx, cellSizePx);
            }
        })();
    </script>
}